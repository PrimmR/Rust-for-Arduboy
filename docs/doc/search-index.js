var searchIndex = JSON.parse('{\
"arduboy_rust":{"doc":"","t":"DDNEDDRRRNAAAOOOOAAOADNERRDDRNMMMMMMDARRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRFAARRRRDRRRRRRRRMLLLLRRRRRRRDDRRRENNDERRNDDRRRNRRNQDIRRRRRDRRRNAALLLLLLLLLAGGGGGGGGGGGLLLLFKFLLOMLLLLLLLLOOOLLMLLLLLLALLLLLLKOLFFLAFLLLLLLLLLLLLLMLMMMMDNERRDDRNLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMMDALLLLLLLLLLLLLLLLRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRRDRRRRRRRRMRRRRRFFFFFFFFFF","n":["Arduboy2","ArduboyTones","Black","Color","EEPROM","EEPROMBYTE","FONT_SIZE","HEIGHT","WIDTH","White","arduboy2","arduboy_tone","c","f","get_sprite_addr","get_string_addr","get_tones_addr","hardware","prelude","progmem","sprites","Arduboy2","Black","Color","FONT_SIZE","HEIGHT","Point","Rect","WIDTH","White","height","width","x","x","y","y","ArduboyTones","arduboy_tone_pitch","NOTE_A0","NOTE_A0H","NOTE_A1","NOTE_A1H","NOTE_A2","NOTE_A2H","NOTE_A3","NOTE_A3H","NOTE_A4","NOTE_A4H","NOTE_A5","NOTE_A5H","NOTE_A6","NOTE_A6H","NOTE_A7","NOTE_A7H","NOTE_A8","NOTE_A8H","NOTE_A9","NOTE_A9H","NOTE_AS0","NOTE_AS0H","NOTE_AS1","NOTE_AS1H","NOTE_AS2","NOTE_AS2H","NOTE_AS3","NOTE_AS3H","NOTE_AS4","NOTE_AS4H","NOTE_AS5","NOTE_AS5H","NOTE_AS6","NOTE_AS6H","NOTE_AS7","NOTE_AS7H","NOTE_AS8","NOTE_AS8H","NOTE_AS9","NOTE_AS9H","NOTE_B0","NOTE_B0H","NOTE_B1","NOTE_B1H","NOTE_B2","NOTE_B2H","NOTE_B3","NOTE_B3H","NOTE_B4","NOTE_B4H","NOTE_B5","NOTE_B5H","NOTE_B6","NOTE_B6H","NOTE_B7","NOTE_B7H","NOTE_B8","NOTE_B8H","NOTE_B9","NOTE_B9H","NOTE_C0","NOTE_C0H","NOTE_C1","NOTE_C1H","NOTE_C2","NOTE_C2H","NOTE_C3","NOTE_C3H","NOTE_C4","NOTE_C4H","NOTE_C5","NOTE_C5H","NOTE_C6","NOTE_C6H","NOTE_C7","NOTE_C7H","NOTE_C8","NOTE_C8H","NOTE_C9","NOTE_C9H","NOTE_CS0","NOTE_CS0H","NOTE_CS1","NOTE_CS1H","NOTE_CS2","NOTE_CS2H","NOTE_CS3","NOTE_CS3H","NOTE_CS4","NOTE_CS4H","NOTE_CS5","NOTE_CS5H","NOTE_CS6","NOTE_CS6H","NOTE_CS7","NOTE_CS7H","NOTE_CS8","NOTE_CS8H","NOTE_CS9","NOTE_CS9H","NOTE_D0","NOTE_D0H","NOTE_D1","NOTE_D1H","NOTE_D2","NOTE_D2H","NOTE_D3","NOTE_D3H","NOTE_D4","NOTE_D4H","NOTE_D5","NOTE_D5H","NOTE_D6","NOTE_D6H","NOTE_D7","NOTE_D7H","NOTE_D8","NOTE_D8H","NOTE_D9","NOTE_D9H","NOTE_DS0","NOTE_DS0H","NOTE_DS1","NOTE_DS1H","NOTE_DS2","NOTE_DS2H","NOTE_DS3","NOTE_DS3H","NOTE_DS4","NOTE_DS4H","NOTE_DS5","NOTE_DS5H","NOTE_DS6","NOTE_DS6H","NOTE_DS7","NOTE_DS7H","NOTE_DS8","NOTE_DS8H","NOTE_DS9","NOTE_DS9H","NOTE_E0","NOTE_E0H","NOTE_E1","NOTE_E1H","NOTE_E2","NOTE_E2H","NOTE_E3","NOTE_E3H","NOTE_E4","NOTE_E4H","NOTE_E5","NOTE_E5H","NOTE_E6","NOTE_E6H","NOTE_E7","NOTE_E7H","NOTE_E8","NOTE_E8H","NOTE_E9","NOTE_E9H","NOTE_F0","NOTE_F0H","NOTE_F1","NOTE_F1H","NOTE_F2","NOTE_F2H","NOTE_F3","NOTE_F3H","NOTE_F4","NOTE_F4H","NOTE_F5","NOTE_F5H","NOTE_F6","NOTE_F6H","NOTE_F7","NOTE_F7H","NOTE_F8","NOTE_F8H","NOTE_F9","NOTE_F9H","NOTE_FS0","NOTE_FS0H","NOTE_FS1","NOTE_FS1H","NOTE_FS2","NOTE_FS2H","NOTE_FS3","NOTE_FS3H","NOTE_FS4","NOTE_FS4H","NOTE_FS5","NOTE_FS5H","NOTE_FS6","NOTE_FS6H","NOTE_FS7","NOTE_FS7H","NOTE_FS8","NOTE_FS8H","NOTE_FS9","NOTE_FS9H","NOTE_G0","NOTE_G0H","NOTE_G1","NOTE_G1H","NOTE_G2","NOTE_G2H","NOTE_G3","NOTE_G3H","NOTE_G4","NOTE_G4H","NOTE_G5","NOTE_G5H","NOTE_G6","NOTE_G6H","NOTE_G7","NOTE_G7H","NOTE_G8","NOTE_G8H","NOTE_G9","NOTE_G9H","NOTE_GS0","NOTE_GS0H","NOTE_GS1","NOTE_GS1H","NOTE_GS2","NOTE_GS2H","NOTE_GS3","NOTE_GS3H","NOTE_GS4","NOTE_GS4H","NOTE_GS5","NOTE_GS5H","NOTE_GS6","NOTE_GS6H","NOTE_GS7","NOTE_GS7H","NOTE_GS8","NOTE_GS8H","NOTE_GS9","NOTE_GS9H","NOTE_REST","TONES_END","TONES_REPEAT","TONE_HIGH_VOLUME","VOLUME_ALWAYS_HIGH","VOLUME_ALWAYS_NORMAL","VOLUME_IN_TONE","strlen","buttons","led","A","A_BUTTON","B","B_BUTTON","ButtonSet","DOWN","DOWN_BUTTON","LEFT","LEFT_BUTTON","RIGHT","RIGHT_BUTTON","UP","UP_BUTTON","flag_set","just_pressed","just_released","not_pressed","pressed","BLUE_LED","GREEN_LED","RED_LED","RGB_OFF","RGB_ON","A","A_BUTTON","Arduboy2","ArduboyTones","B","BLUE_LED","B_BUTTON","Base","Bin","Black","ButtonSet","Color","DOWN","DOWN_BUTTON","Dec","EEPROM","EEPROMBYTE","FONT_SIZE","GREEN_LED","HEIGHT","Hex","LEFT","LEFT_BUTTON","Oct","Parameters","Point","Printable","RED_LED","RGB_OFF","RGB_ON","RIGHT","RIGHT_BUTTON","Rect","UP","UP_BUTTON","WIDTH","White","arduboy2","arduboy_tone","bitor","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","buttons","c_char","c_double","c_float","c_int","c_long","c_longlong","c_size_t","c_uchar","c_uint","c_ulong","c_ulonglong","clone","clone","cmp","cmp","constrain","default_parameters","delay","eq","eq","f","flag_set","fmt","fmt","from","from","from","from","get","get_direct","get_sprite_addr","get_string_addr","get_tones_addr","hash","hash","height","init","init","into","into","into","into","led","new","new","partial_cmp","partial_cmp","print","print","print_2","progmem","put","random_between","random_less_than","read","sprites","strlen","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","update","width","write","x","x","y","y","Arduboy2","Black","Color","FONT_SIZE","HEIGHT","Point","Rect","WIDTH","White","audio_enabled","audio_off","audio_on","audio_on_and_save","audio_save_on_off","audio_toggle","begin","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clear","clone","cmp","collide_point","collide_rect","digital_write_rgb","digital_write_rgb_single","display","display_and_clear_buffer","draw_circle","draw_fast_hline","draw_fast_vline","draw_pixel","draw_rect","draw_round_rect","draw_triangle","eq","every_x_frames","fill_circle","fill_rect","fill_round_rect","fill_triangle","flip_horizontal","flip_vertical","fmt","from","from","from","from","get_pixel","hash","height","idle","init_random_seed","into","into","into","into","invert","just_pressed","just_released","new","next_frame","not","not_pressed","partial_cmp","poll_buttons","pressed","print","set_cursor","set_cursor_x","set_cursor_y","set_frame_rate","set_text_background_color","set_text_color","set_text_size","set_text_wrap","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","width","x","x","y","y","ArduboyTones","arduboy_tone_pitch","borrow","borrow_mut","from","into","new","no_tone","playing","tone","tone2","tone3","tones","tones_in_ram","try_from","try_into","type_id","volume_mode","NOTE_A0","NOTE_A0H","NOTE_A1","NOTE_A1H","NOTE_A2","NOTE_A2H","NOTE_A3","NOTE_A3H","NOTE_A4","NOTE_A4H","NOTE_A5","NOTE_A5H","NOTE_A6","NOTE_A6H","NOTE_A7","NOTE_A7H","NOTE_A8","NOTE_A8H","NOTE_A9","NOTE_A9H","NOTE_AS0","NOTE_AS0H","NOTE_AS1","NOTE_AS1H","NOTE_AS2","NOTE_AS2H","NOTE_AS3","NOTE_AS3H","NOTE_AS4","NOTE_AS4H","NOTE_AS5","NOTE_AS5H","NOTE_AS6","NOTE_AS6H","NOTE_AS7","NOTE_AS7H","NOTE_AS8","NOTE_AS8H","NOTE_AS9","NOTE_AS9H","NOTE_B0","NOTE_B0H","NOTE_B1","NOTE_B1H","NOTE_B2","NOTE_B2H","NOTE_B3","NOTE_B3H","NOTE_B4","NOTE_B4H","NOTE_B5","NOTE_B5H","NOTE_B6","NOTE_B6H","NOTE_B7","NOTE_B7H","NOTE_B8","NOTE_B8H","NOTE_B9","NOTE_B9H","NOTE_C0","NOTE_C0H","NOTE_C1","NOTE_C1H","NOTE_C2","NOTE_C2H","NOTE_C3","NOTE_C3H","NOTE_C4","NOTE_C4H","NOTE_C5","NOTE_C5H","NOTE_C6","NOTE_C6H","NOTE_C7","NOTE_C7H","NOTE_C8","NOTE_C8H","NOTE_C9","NOTE_C9H","NOTE_CS0","NOTE_CS0H","NOTE_CS1","NOTE_CS1H","NOTE_CS2","NOTE_CS2H","NOTE_CS3","NOTE_CS3H","NOTE_CS4","NOTE_CS4H","NOTE_CS5","NOTE_CS5H","NOTE_CS6","NOTE_CS6H","NOTE_CS7","NOTE_CS7H","NOTE_CS8","NOTE_CS8H","NOTE_CS9","NOTE_CS9H","NOTE_D0","NOTE_D0H","NOTE_D1","NOTE_D1H","NOTE_D2","NOTE_D2H","NOTE_D3","NOTE_D3H","NOTE_D4","NOTE_D4H","NOTE_D5","NOTE_D5H","NOTE_D6","NOTE_D6H","NOTE_D7","NOTE_D7H","NOTE_D8","NOTE_D8H","NOTE_D9","NOTE_D9H","NOTE_DS0","NOTE_DS0H","NOTE_DS1","NOTE_DS1H","NOTE_DS2","NOTE_DS2H","NOTE_DS3","NOTE_DS3H","NOTE_DS4","NOTE_DS4H","NOTE_DS5","NOTE_DS5H","NOTE_DS6","NOTE_DS6H","NOTE_DS7","NOTE_DS7H","NOTE_DS8","NOTE_DS8H","NOTE_DS9","NOTE_DS9H","NOTE_E0","NOTE_E0H","NOTE_E1","NOTE_E1H","NOTE_E2","NOTE_E2H","NOTE_E3","NOTE_E3H","NOTE_E4","NOTE_E4H","NOTE_E5","NOTE_E5H","NOTE_E6","NOTE_E6H","NOTE_E7","NOTE_E7H","NOTE_E8","NOTE_E8H","NOTE_E9","NOTE_E9H","NOTE_F0","NOTE_F0H","NOTE_F1","NOTE_F1H","NOTE_F2","NOTE_F2H","NOTE_F3","NOTE_F3H","NOTE_F4","NOTE_F4H","NOTE_F5","NOTE_F5H","NOTE_F6","NOTE_F6H","NOTE_F7","NOTE_F7H","NOTE_F8","NOTE_F8H","NOTE_F9","NOTE_F9H","NOTE_FS0","NOTE_FS0H","NOTE_FS1","NOTE_FS1H","NOTE_FS2","NOTE_FS2H","NOTE_FS3","NOTE_FS3H","NOTE_FS4","NOTE_FS4H","NOTE_FS5","NOTE_FS5H","NOTE_FS6","NOTE_FS6H","NOTE_FS7","NOTE_FS7H","NOTE_FS8","NOTE_FS8H","NOTE_FS9","NOTE_FS9H","NOTE_G0","NOTE_G0H","NOTE_G1","NOTE_G1H","NOTE_G2","NOTE_G2H","NOTE_G3","NOTE_G3H","NOTE_G4","NOTE_G4H","NOTE_G5","NOTE_G5H","NOTE_G6","NOTE_G6H","NOTE_G7","NOTE_G7H","NOTE_G8","NOTE_G8H","NOTE_G9","NOTE_G9H","NOTE_GS0","NOTE_GS0H","NOTE_GS1","NOTE_GS1H","NOTE_GS2","NOTE_GS2H","NOTE_GS3","NOTE_GS3H","NOTE_GS4","NOTE_GS4H","NOTE_GS5","NOTE_GS5H","NOTE_GS6","NOTE_GS6H","NOTE_GS7","NOTE_GS7H","NOTE_GS8","NOTE_GS8H","NOTE_GS9","NOTE_GS9H","NOTE_REST","TONES_END","TONES_REPEAT","TONE_HIGH_VOLUME","VOLUME_ALWAYS_HIGH","VOLUME_ALWAYS_NORMAL","VOLUME_IN_TONE","A","A_BUTTON","B","B_BUTTON","ButtonSet","DOWN","DOWN_BUTTON","LEFT","LEFT_BUTTON","RIGHT","RIGHT_BUTTON","UP","UP_BUTTON","flag_set","BLUE_LED","GREEN_LED","RED_LED","RGB_OFF","RGB_ON","draw_erase","draw_external_mask","draw_override","draw_plus_mask","draw_self_masked","draw_erase","draw_external_mask","draw_override","draw_plus_mask","draw_self_masked"],"q":[[0,"arduboy_rust"],[21,"arduboy_rust::arduboy2"],[36,"arduboy_rust::arduboy_tone"],[38,"arduboy_rust::arduboy_tone::arduboy_tone_pitch"],[285,"arduboy_rust::c"],[286,"arduboy_rust::hardware"],[288,"arduboy_rust::hardware::buttons"],[306,"arduboy_rust::hardware::led"],[311,"arduboy_rust::prelude"],[436,"arduboy_rust::prelude::arduboy2"],[534,"arduboy_rust::prelude::arduboy_tone"],[552,"arduboy_rust::prelude::arduboy_tone::arduboy_tone_pitch"],[799,"arduboy_rust::prelude::buttons"],[813,"arduboy_rust::prelude::led"],[818,"arduboy_rust::prelude::sprites"],[823,"arduboy_rust::sprites"]],"d":["This is the struct to interact in a save way with the …","This is the struct to interact in a save way with the …","Led is off","This item is to chose between Black or White","This struct to store and read structs objects to eeprom …","Use this struct to store and read single bytes to/from …","The standard font size of the arduboy","The standard height of the arduboy","The standard width of the arduboy","Led is on","This is the Module to interact in a save way with the …","This is the Module to interact in a save way with the …","Clib functions you can use on the Arduboy","This is the way to go if you want print some random text","Create a <code>const</code> raw pointer to a sprite as u8, without …","Create a <code>const</code> raw pointer to a [u8;_] that saves text, …","Create a <code>const</code> raw pointer to a sprite as u16, without …","This is the Module to interact in a save way with the …","This is the important one to use this library effective in …","Create a space for Progrem variable","This is the module to interact in a save way with the …","This is the struct to interact in a save way with the …","Led is off","This item is to chose between Black or White","The standard font size of the arduboy","The standard height of the arduboy","This struct is used by a few Arduboy functions.","This struct is used by a few Arduboy functions.","The standard width of the arduboy","Led is on","Rect height","Rect width","Position X","Position X","Position Y","Position Y","This is the struct to interact in a save way with the …","A list of all tones available and used by the Sounds …function to get the length of a string","A list of all six buttons available on the Arduboy","A list of all LED variables available","Just a <code>const</code> for the A button","Just a <code>const</code> for the A button","Just a <code>const</code> for the B button","Just a <code>const</code> for the B button","This struct gives the library a understanding what Buttons …","Just a <code>const</code> for the DOWN button","Just a <code>const</code> for the DOWN button","Just a <code>const</code> for the LEFT button","Just a <code>const</code> for the LEFT button","Just a <code>const</code> for the RIGHT button","Just a <code>const</code> for the RIGHT button","Just a <code>const</code> for the UP button","Just a <code>const</code> for the UP button","","","","","","Just a <code>const</code> for the blue led","Just a <code>const</code> for the green led","Just a <code>const</code> for the red led","Just a <code>const</code> for led off","Just a <code>const</code> for led on","Just a <code>const</code> for the A button","Just a <code>const</code> for the A button","This is the struct to interact in a save way with the …","This is the struct to interact in a save way with the …","Just a <code>const</code> for the B button","Just a <code>const</code> for the blue led","Just a <code>const</code> for the B button","","","Led is off","This struct gives the library a understanding what Buttons …","This item is to chose between Black or White","Just a <code>const</code> for the DOWN button","Just a <code>const</code> for the DOWN button","","This struct to store and read structs objects to eeprom …","Use this struct to store and read single bytes to/from …","The standard font size of the arduboy","Just a <code>const</code> for the green led","The standard height of the arduboy","","Just a <code>const</code> for the LEFT button","Just a <code>const</code> for the LEFT button","","","This struct is used by a few Arduboy functions.","","Just a <code>const</code> for the red led","Just a <code>const</code> for led off","Just a <code>const</code> for led on","Just a <code>const</code> for the RIGHT button","Just a <code>const</code> for the RIGHT button","This struct is used by a few Arduboy functions.","Just a <code>const</code> for the UP button","Just a <code>const</code> for the UP button","The standard width of the arduboy","Led is on","This is the Module to interact in a save way with the …","This is the Module to interact in a save way with the …","","","","","","","","","","A list of all six buttons available on the Arduboy","Equivalent to C’s <code>char</code> type.","Equivalent to C’s <code>double</code> type.","Equivalent to C’s <code>float</code> type.","Equivalent to C’s <code>signed int</code> (<code>int</code>) type.","Equivalent to C’s <code>signed long</code> (<code>long</code>) type.","Equivalent to C’s <code>signed long long</code> (<code>long long</code>) type.","Equivalent to C’s <code>size_t</code> type, from <code>stddef.h</code> (or <code>cstddef</code> …","Equivalent to C’s <code>unsigned char</code> type.","Equivalent to C’s <code>unsigned int</code> type.","Equivalent to C’s <code>unsigned long</code> type.","Equivalent to C’s <code>unsigned long long</code> type.","","","","","","","A Arduino function to pause the cpu circles for a given …","","","This is the way to go if you want print some random text","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","Create a <code>const</code> raw pointer to a sprite as u8, without …","Create a <code>const</code> raw pointer to a [u8;_] that saves text, …","Create a <code>const</code> raw pointer to a sprite as u16, without …","","","Rect height","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","A list of all LED variables available","","","","","","","","Create a space for Progrem variable","","A Arduino function to get a random number between 2 numbers","A Arduino function to get a random number smaller than the …","","This is the module to interact in a save way with the …","A C function to get the length of a string","","","","","","","","","","","","","","Rect width","","Position X","Position X","Position Y","Position Y","This is the struct to interact in a save way with the …","Led is off","This item is to chose between Black or White","The standard font size of the arduboy","The standard height of the arduboy","This struct is used by a few Arduboy functions.","This struct is used by a few Arduboy functions.","The standard width of the arduboy","Led is on","Get the current sound state.","Turn sound off (mute).","Turn sound on.","Combines the use function of <code>audio_on()</code> and …","Save the current sound state in EEPROM.","Toggle the sound on/off state.","Initialize the hardware, display the boot logo, provide …","","","","","","","","","Clear the display buffer and set the text cursor to …","","","Test if a point falls within a rectangle.","Test if a rectangle is intersecting with another rectangle.","Set the RGB LEDs digitally, to either fully on or fully …","Set one of the RGB LEDs digitally, to either fully on or …","Copy the contents of the display buffer to the display. …","Copy the contents of the display buffer to the display. …","Draw a circle of a given radius.","Draw a horizontal line.","Draw a vertical line.","Set a single pixel in the display buffer to the specified …","Draw a rectangle of a specified width and height.","Draw a rectangle with rounded corners.","Draw a triangle given the coordinates of each corner.","","Indicate if the specified number of frames has elapsed.","Draw a filled-in circle of a given radius.","Draw a filled-in rectangle of a specified width and height.","Draw a filled-in rectangle with rounded corners.","Draw a filled-in triangle given the coordinates of each …","Flip the display horizontally or set it back to normal.","Flip the display vertically or set it back to normal.","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the state of the given pixel in the screen buffer.","","Rect height","Idle the CPU to save power.","Seed the random number generator with a random value.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Invert the entire display or set it back to normal.","Check if a button has just been pressed.","Check if a button has just been released.","gives you a new instans of the Arduboy2","Indicate that it’s time to render the next frame.","","Test if the specified buttons are not pressed.","","Poll the buttons and track their state over time.","Test if the all of the specified buttons are pressed.","The Arduino Print class is available for writing text to …","Set the location of the text cursor.","Set the X coordinate of the text cursor location.","Set the Y coordinate of the text cursor location.","Set the frame rate used by the frame control functions.","Set the text background color.","Set the text foreground color.","Set the text character size.","Set or disable text wrap mode.","","","","","","","","","","","","","Rect width","Position X","Position X","Position Y","Position Y","This is the struct to interact in a save way with the …","A list of all tones available and used by the Sounds …","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Get a new instance of ArduboyTones","Stop playing the tone or sequence.","Check if a tone or tone sequence is playing.","Play a single tone.","Play two tones in sequence.","Play three tones in sequence.","Play a tone sequence from frequency/duration pairs in a …","Play a tone sequence from frequency/duration pairs in an …","","","","Set the volume to always normal, always high, or tone …ust a <code>const</code> for the A button","Just a <code>const</code> for the A button","Just a <code>const</code> for the B button","Just a <code>const</code> for the B button","This struct gives the library a understanding what Buttons …","Just a <code>const</code> for the DOWN button","Just a <code>const</code> for the DOWN button","Just a <code>const</code> for the LEFT button","Just a <code>const</code> for the LEFT button","Just a <code>const</code> for the RIGHT button","Just a <code>const</code> for the RIGHT button","Just a <code>const</code> for the UP button","Just a <code>const</code> for the UP button","","Just a <code>const</code> for the blue led","Just a <code>const</code> for the green led","Just a <code>const</code> for the red led","Just a <code>const</code> for led off","Just a <code>const</code> for led on","“Erase” a sprite.","Draw a sprite using a separate image and mask array.","Draw a sprite by replacing the existing content completely.","Draw a sprite using an array containing both image and …","Draw a sprite using only the bits set to 1.","“Erase” a sprite.","Draw a sprite using a separate image and mask array.","Draw a sprite by replacing the existing content completely.","Draw a sprite using an array containing both image and …","Draw a sprite using only the bits set to 1."],"i":[0,0,21,0,0,0,0,0,0,21,0,0,0,0,0,0,0,0,0,0,0,0,21,0,0,0,0,0,0,21,23,23,23,22,23,22,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,5,21,0,0,0,0,5,0,0,0,0,0,5,0,0,5,24,0,0,0,0,0,0,0,0,0,0,0,21,0,0,3,11,13,3,5,11,13,3,5,0,0,0,0,0,0,0,0,0,0,0,0,3,5,3,5,0,24,0,3,5,0,3,3,5,11,13,3,5,11,11,0,0,0,3,5,23,11,13,11,13,3,5,0,11,13,3,5,24,24,24,0,11,0,0,13,0,0,11,13,3,5,11,13,3,5,11,13,3,5,13,23,13,23,22,23,22,0,21,0,0,0,0,0,0,21,20,20,20,20,20,20,20,23,22,20,21,23,22,20,21,20,21,21,20,20,20,20,20,20,20,20,20,20,20,20,20,21,20,20,20,20,20,20,20,21,23,22,20,21,20,21,23,20,20,23,22,20,21,20,20,20,20,20,21,20,21,20,20,20,20,20,20,20,20,20,20,20,23,22,20,21,23,22,20,21,23,22,20,21,23,23,22,23,22,0,0,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,25,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],"fc":[],"p":[[15,"i8"],[15,"usize"],[3,"ButtonSet"],[15,"bool"],[4,"Base"],[4,"Ordering"],[8,"Ord"],[15,"u32"],[3,"Formatter"],[6,"Result"],[3,"EEPROM"],[8,"Hasher"],[3,"EEPROMBYTE"],[15,"i16"],[4,"Option"],[15,"i32"],[15,"u8"],[4,"Result"],[3,"TypeId"],[3,"Arduboy2"],[4,"Color"],[3,"Point"],[3,"Rect"],[8,"Printable"],[3,"ArduboyTones"],[15,"u16"]]},\
"panic_halt":{"doc":"Set the panicking behavior to halt","t":"","n":[],"q":[],"d":[],"i":[],"f":[],"c":[],"p":[]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
